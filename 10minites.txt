==========================10分で作るOSGiアプリ==========================まず10分でざっとOSGiアプリケーションを作成してみましょう。用語等は後述のドキュメントを読んでください。必要な環境=============EclipseのプラグインはOSGiのBundleであるため、Eclipseのプラグインを作成自体がOSGiアプリケーションの作成と言えるでしょう。そのため、Eclipseのプラグイン開発環境(PDE)を準備します。Eclipse for RCP/Plug-in Developersを http://www.eclipse.org/downloads/ よりダウンロードしてください。手順=====#. Bundleプロジェクトを作成する。   先ほどもちらっと書きましたが、EclipseのpluginプロジェクトはBundleプロジェクトです。ここではEclipse Plug-inプロジェクトを作成してみましょう。      1. Package View上で右クリックし、「New -> Project」を選択        .. image:: images/10minites/01_new_project.png   2. 「Plug-in Development」の下にある「Plug-in Project」を選択し、Next        .. image:: images/10minites/02_create_plug-in_project.png   3. 「Project name」に「org.foo.example」と入力し、「Target Platform」には「an OSGi framework」を選択し、Next        .. image:: images/10minites/03_project_name.png   4. 「Name」に「Example Bundle」と入力し、Optionsの一番上の「Activator」を空欄に、さらにチェックを外し、Finish        .. image:: images/10minites/04_properties.png   #. BundleActivatorを作成する。   下記のクラスを作成します。ソースコードをコピーします。コピーする内容は下記の通りです。   .. literalinclude:: src/Example.java      :language: java      :linenos:      プロジェクトのソースコードフォルダに貼付けましょう。   .. image:: images/10minites/05_src_copy.png         この段階ではまだこのBundleの依存情報が入力されていないため、コンパイルエラーになっています。      .. image:: images/10minites/06_compile_error.png#. メタデータを修正する。   先ほどのウィザードで作成された、BundleのメタデータでもあるMANIFEST.MFを修正します。MANIFEST.MFを開き、下部右にあるMANIFEST.MFのタブを開いてください。      .. image:: images/10minites/07_open_manifest.png         作成した直後は下記のようになっています。   .. literalinclude:: src/MANIFEST.MF      :language: java      :linenos:   上記の状態になっている事を確認後、最後の行に次の一行を追記してください。::	      Import-Package: org.osgi.framework;version="1.3.0"	   最後の行は空行でなければなりませんので、最後に空行を作成してください。#. OSGiランタイムを起動する。   1. それではEclipseに内蔵されているOSGiランタイムを起動しましょう。下図のようにLaunch Configuration画面を開いてください。      .. image:: images/10minites/08_open_launch_conf.png   2. 「OSGi Framework」を選択します。   .. image:: images/10minites/09_osgi_framework.png      3. 「Target Platform」のチェックを外します。      .. image:: images/10minites/10_removed_target_platform.png      4. 「Add Required Bundles」ボタンを押すと、必要なBundleが選択されます。      .. image:: images/10minites/11_add_required_bundle.png      5. 「Run」ボタンを押すと、OSGiランタイムが起動します。ランタイム上で「ss」とコマンドを打つと、下記の画面が表示されます。      .. image:: images/10minites/12_launch_console.png      #. さらにメタデータを修正する。   先ほど作成したBundleActivatorをメタデータとして設定すれば、Bundleの状態がかわったときにコンソールにメッセージを出力できます。次の一行をMANIFEST.MFに追加します。::        Bundle-Activator: org.foo.example.Example   さらにOSGiコンソールで次のコマンドを打ってください。::        update org.foo.example	    一度Bundleの状態を確認します。::        ss	    すると、org.foo.exampleがINSTALLEDになっていると思います。このBundleをstartします。::        start org.foo.example   うまくいけばHello worldが表示されるでしょう。      .. image:: images/10minites/13_hello_world.png         (この画像の例はBundle名ではなく、コンソール上の番号"ID"で指定しています。)参考文献======== * `Mind the Gap様のエントリをベースに作成しています。 <http://underlap.blogspot.com/2007/01/creating-osgi-bundle.html>`_ こちらはJDKがあれば10minitesで作れるチュートリアルです。